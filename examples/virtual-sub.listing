GAS LISTING /tmp/ccs0gzEm.s 			page 1


   1              		.file	"virtual-sub.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.align 2
   5              		.globl	_ZNK5baseA8getDataAEv
   7              	_ZNK5baseA8getDataAEv:
   8              	.LFB20:
   9              		.file 1 "virtual-sub.cpp"
   1:virtual-sub.cpp **** #include <stdio.h>
   2:virtual-sub.cpp **** 
   3:virtual-sub.cpp **** class bottomBase {
   4:virtual-sub.cpp ****     int baseData;
   5:virtual-sub.cpp ****   public:
   6:virtual-sub.cpp ****     virtual int getBaseData() const;
   7:virtual-sub.cpp **** };
   8:virtual-sub.cpp **** 
   9:virtual-sub.cpp **** class baseA : public virtual bottomBase {
  10:virtual-sub.cpp ****     int dataA;
  11:virtual-sub.cpp ****   public:
  12:virtual-sub.cpp ****     void setDataA(int a);
  13:virtual-sub.cpp ****     virtual int getDataA() const;
  14:virtual-sub.cpp **** };
  15:virtual-sub.cpp **** 
  16:virtual-sub.cpp **** class baseB : public virtual bottomBase {
  17:virtual-sub.cpp ****     int dataB;
  18:virtual-sub.cpp ****   public:
  19:virtual-sub.cpp ****     void setDataB(int b);
  20:virtual-sub.cpp ****     virtual int getDataB() const;
  21:virtual-sub.cpp **** };
  22:virtual-sub.cpp **** 
  23:virtual-sub.cpp **** class subBoth : public baseA, public baseB {
  24:virtual-sub.cpp ****   public:
  25:virtual-sub.cpp ****     virtual int getSum() const;
  26:virtual-sub.cpp ****     // Overrise get data methods for fun.
  27:virtual-sub.cpp ****     virtual int getDataA() const;
  28:virtual-sub.cpp ****     virtual int getDataB() const;
  29:virtual-sub.cpp **** 
  30:virtual-sub.cpp ****     // Override getBaseData;
  31:virtual-sub.cpp ****     virtual int getBaseData() const;
  32:virtual-sub.cpp **** };
  33:virtual-sub.cpp **** 
  34:virtual-sub.cpp **** void baseA::setDataA(int a) {
  35:virtual-sub.cpp ****     dataA = a;
  36:virtual-sub.cpp **** }
  37:virtual-sub.cpp **** int baseA::getDataA() const {
  10              		.loc 1 37 0
  11              		.cfi_startproc
  12              	.LVL0:
  38:virtual-sub.cpp ****     return dataA;
  13              		.loc 1 38 0
  14 0000 8B4708   		movl	8(%rdi), %eax
  39:virtual-sub.cpp **** }
  15              		.loc 1 39 0
  16 0003 C3       		ret
  17              		.cfi_endproc
  18              	.LFE20:
  20              		.align 2
GAS LISTING /tmp/ccs0gzEm.s 			page 2


  21              		.globl	_ZNK5baseB8getDataBEv
  23              	_ZNK5baseB8getDataBEv:
  24              	.LFB22:
  40:virtual-sub.cpp **** 
  41:virtual-sub.cpp **** void baseB::setDataB(int b) {
  42:virtual-sub.cpp ****     dataB = b;
  43:virtual-sub.cpp **** }
  44:virtual-sub.cpp **** int baseB::getDataB() const {
  25              		.loc 1 44 0
  26              		.cfi_startproc
  27              	.LVL1:
  45:virtual-sub.cpp ****     return dataB;
  28              		.loc 1 45 0
  29 0004 8B4708   		movl	8(%rdi), %eax
  46:virtual-sub.cpp **** }
  30              		.loc 1 46 0
  31 0007 C3       		ret
  32              		.cfi_endproc
  33              	.LFE22:
  35              		.align 2
  36              		.globl	_ZNK7subBoth6getSumEv
  38              	_ZNK7subBoth6getSumEv:
  39              	.LFB23:
  47:virtual-sub.cpp **** 
  48:virtual-sub.cpp **** int subBoth::getSum() const {
  40              		.loc 1 48 0
  41              		.cfi_startproc
  42              	.LVL2:
  43 0008 55       		pushq	%rbp
  44              		.cfi_def_cfa_offset 16
  45              		.cfi_offset 6, -16
  46 0009 53       		pushq	%rbx
  47              		.cfi_def_cfa_offset 24
  48              		.cfi_offset 3, -24
  49 000a 4883EC08 		subq	$8, %rsp
  50              		.cfi_def_cfa_offset 32
  51 000e 4889FB   		movq	%rdi, %rbx
  52              	.LVL3:
  53              	.LBB8:
  49:virtual-sub.cpp ****     int total = 0;
  50:virtual-sub.cpp ****     total += getDataA();
  54              		.loc 1 50 0
  55 0011 488B07   		movq	(%rdi), %rax
  56 0014 FF10     		call	*(%rax)
  57              	.LVL4:
  58 0016 89C5     		movl	%eax, %ebp
  59              	.LVL5:
  51:virtual-sub.cpp ****     total += getDataB();
  60              		.loc 1 51 0
  61 0018 488B03   		movq	(%rbx), %rax
  62              	.LVL6:
  63 001b 4889DF   		movq	%rbx, %rdi
  64 001e FF5010   		call	*16(%rax)
  65              	.LVL7:
  66 0021 01E8     		addl	%ebp, %eax
  67              	.LVL8:
  68              	.LBE8:
GAS LISTING /tmp/ccs0gzEm.s 			page 3


  52:virtual-sub.cpp ****     return total;
  53:virtual-sub.cpp **** }
  69              		.loc 1 53 0
  70 0023 4883C408 		addq	$8, %rsp
  71              		.cfi_def_cfa_offset 24
  72 0027 5B       		popq	%rbx
  73              		.cfi_def_cfa_offset 16
  74              	.LVL9:
  75 0028 5D       		popq	%rbp
  76              		.cfi_def_cfa_offset 8
  77 0029 C3       		ret
  78              		.cfi_endproc
  79              	.LFE23:
  81              		.section	.rodata.str1.1,"aMS",@progbits,1
  82              	.LC0:
  83 0000 63616C6C 		.string	"calling getDataA()\n"
  83      696E6720 
  83      67657444 
  83      61746141 
  83      28290A00 
  84              		.text
  85              		.align 2
  86              		.globl	_ZNK7subBoth8getDataAEv
  88              	_ZNK7subBoth8getDataAEv:
  89              	.LFB24:
  54:virtual-sub.cpp **** 
  55:virtual-sub.cpp **** int subBoth::getDataA() const {
  90              		.loc 1 55 0
  91              		.cfi_startproc
  92              	.LVL10:
  93 002a 53       		pushq	%rbx
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 3, -16
  96 002b 4889FB   		movq	%rdi, %rbx
  97              	.LVL11:
  98              	.LBB9:
  99              	.LBB10:
 100              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2014 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <http://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
GAS LISTING /tmp/ccs0gzEm.s 			page 4


  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 _G_va_list __ap))
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_BSD || defined __USE_ISOC99 || defined __USE_UNIX98
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    _G_va_list __ap) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, _G_va_list __ap))
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccs0gzEm.s 			page 5


  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, _G_va_list __ap);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  _G_va_list __ap);
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 101              		.loc 2 104 0
 102 002e BE000000 		movl	$.LC0, %esi
 102      00
 103 0033 BF010000 		movl	$1, %edi
 103      00
 104              	.LVL12:
 105 0038 B8000000 		movl	$0, %eax
 105      00
 106 003d E8000000 		call	__printf_chk
 106      00
 107              	.LVL13:
 108              	.LBE10:
 109              	.LBE9:
  56:virtual-sub.cpp ****     printf("calling getDataA()\n");
  57:virtual-sub.cpp ****     return baseA::getDataA();
 110              		.loc 1 57 0
 111 0042 4889DF   		movq	%rbx, %rdi
 112 0045 E8000000 		call	_ZNK5baseA8getDataAEv
 112      00
 113              	.LVL14:
  58:virtual-sub.cpp **** }
 114              		.loc 1 58 0
 115 004a 5B       		popq	%rbx
 116              		.cfi_def_cfa_offset 8
 117              	.LVL15:
 118 004b C3       		ret
 119              		.cfi_endproc
 120              	.LFE24:
 122              		.section	.rodata.str1.1
GAS LISTING /tmp/ccs0gzEm.s 			page 6


 123              	.LC1:
 124 0014 63616C6C 		.string	"calling getDataB()\n"
 124      696E6720 
 124      67657444 
 124      61746142 
 124      28290A00 
 125              		.text
 126              		.align 2
 127              		.globl	_ZNK7subBoth8getDataBEv
 129              	_ZNK7subBoth8getDataBEv:
 130              	.LFB25:
  59:virtual-sub.cpp **** 
  60:virtual-sub.cpp **** int subBoth::getDataB() const {
 131              		.loc 1 60 0
 132              		.cfi_startproc
 133              	.LVL16:
 134 004c 53       		pushq	%rbx
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 3, -16
 137 004d 4889FB   		movq	%rdi, %rbx
 138              	.LVL17:
 139              	.LBB11:
 140              	.LBB12:
 141              		.loc 2 104 0
 142 0050 BE000000 		movl	$.LC1, %esi
 142      00
 143 0055 BF010000 		movl	$1, %edi
 143      00
 144              	.LVL18:
 145 005a B8000000 		movl	$0, %eax
 145      00
 146 005f E8000000 		call	__printf_chk
 146      00
 147              	.LVL19:
 148              	.LBE12:
 149              	.LBE11:
  61:virtual-sub.cpp ****     printf("calling getDataB()\n");
  62:virtual-sub.cpp ****     return baseB::getDataB();
 150              		.loc 1 62 0
 151 0064 488D7B10 		leaq	16(%rbx), %rdi
 152 0068 E8000000 		call	_ZNK5baseB8getDataBEv
 152      00
 153              	.LVL20:
  63:virtual-sub.cpp **** }
 154              		.loc 1 63 0
 155 006d 5B       		popq	%rbx
 156              		.cfi_def_cfa_offset 8
 157              	.LVL21:
 158 006e C3       		ret
 159              		.cfi_endproc
 160              	.LFE25:
 162              		.set	.LTHUNK0,_ZNK7subBoth8getDataBEv
 163              		.globl	_ZThn16_NK7subBoth8getDataBEv
 165              	_ZThn16_NK7subBoth8getDataBEv:
 166              	.LFB40:
  28:virtual-sub.cpp **** 
 167              		.loc 1 28 0
GAS LISTING /tmp/ccs0gzEm.s 			page 7


 168              		.cfi_startproc
 169 006f 4883EF10 		subq	$16, %rdi
 170 0073 EBD7     		jmp	.LTHUNK0
 171              		.cfi_endproc
 172              	.LFE40:
 174              		.section	.rodata.str1.1
 175              	.LC2:
 176 0028 63616C6C 		.string	"calling getBaseData()\n"
 176      696E6720 
 176      67657442 
 176      61736544 
 176      61746128 
 177              		.text
 178 0075 90       		.align 2
 179              		.globl	_ZNK7subBoth11getBaseDataEv
 181              	_ZNK7subBoth11getBaseDataEv:
 182              	.LFB26:
  64:virtual-sub.cpp **** 
  65:virtual-sub.cpp **** int subBoth::getBaseData() const {
 183              		.loc 1 65 0
 184              		.cfi_startproc
 185              	.LVL22:
 186 0076 53       		pushq	%rbx
 187              		.cfi_def_cfa_offset 16
 188              		.cfi_offset 3, -16
 189 0077 4889FB   		movq	%rdi, %rbx
 190              	.LVL23:
 191              	.LBB13:
 192              	.LBB14:
 193              		.loc 2 104 0
 194 007a BE000000 		movl	$.LC2, %esi
 194      00
 195 007f BF010000 		movl	$1, %edi
 195      00
 196              	.LVL24:
 197 0084 B8000000 		movl	$0, %eax
 197      00
 198 0089 E8000000 		call	__printf_chk
 198      00
 199              	.LVL25:
 200              	.LBE14:
 201              	.LBE13:
  66:virtual-sub.cpp ****     printf("calling getBaseData()\n");
  67:virtual-sub.cpp ****     return bottomBase::getBaseData();
 202              		.loc 1 67 0
 203 008e 488B03   		movq	(%rbx), %rax
 204 0091 480358E8 		addq	-24(%rax), %rbx
 205              	.LVL26:
 206 0095 4889DF   		movq	%rbx, %rdi
 207 0098 E8000000 		call	_ZNK10bottomBase11getBaseDataEv
 207      00
 208              	.LVL27:
  68:virtual-sub.cpp **** }
 209              		.loc 1 68 0
 210 009d 5B       		popq	%rbx
 211              		.cfi_def_cfa_offset 8
 212 009e C3       		ret
GAS LISTING /tmp/ccs0gzEm.s 			page 8


 213              		.cfi_endproc
 214              	.LFE26:
 216              		.set	.LTHUNK1,_ZNK7subBoth11getBaseDataEv
 217              		.globl	_ZTv0_n24_NK7subBoth11getBaseDataEv
 219              	_ZTv0_n24_NK7subBoth11getBaseDataEv:
 220              	.LFB41:
  31:virtual-sub.cpp **** };
 221              		.loc 1 31 0
 222              		.cfi_startproc
 223 009f 4C8B17   		movq	(%rdi), %r10
 224 00a2 49037AE8 		addq	-24(%r10), %rdi
 225 00a6 EBCE     		jmp	.LTHUNK1
 226              		.cfi_endproc
 227              	.LFE41:
 229              		.align 2
 230              		.globl	_ZN5baseA8setDataAEi
 232              	_ZN5baseA8setDataAEi:
 233              	.LFB19:
  34:virtual-sub.cpp ****     dataA = a;
 234              		.loc 1 34 0
 235              		.cfi_startproc
 236              	.LVL28:
  35:virtual-sub.cpp **** }
 237              		.loc 1 35 0
 238 00a8 897708   		movl	%esi, 8(%rdi)
 239 00ab C3       		ret
 240              		.cfi_endproc
 241              	.LFE19:
 243              		.align 2
 244              		.globl	_ZN5baseB8setDataBEi
 246              	_ZN5baseB8setDataBEi:
 247              	.LFB21:
  41:virtual-sub.cpp ****     dataB = b;
 248              		.loc 1 41 0
 249              		.cfi_startproc
 250              	.LVL29:
  42:virtual-sub.cpp **** }
 251              		.loc 1 42 0
 252 00ac 897708   		movl	%esi, 8(%rdi)
 253 00af C3       		ret
 254              		.cfi_endproc
 255              	.LFE21:
 257              		.section	.text._ZN10bottomBaseC2Ev,"axG",@progbits,_ZN10bottomBaseC5Ev,comdat
 258              		.align 2
 259              		.weak	_ZN10bottomBaseC2Ev
 261              	_ZN10bottomBaseC2Ev:
 262              	.LFB30:
   3:virtual-sub.cpp ****     int baseData;
 263              		.loc 1 3 0
 264              		.cfi_startproc
 265              	.LVL30:
 266              	.LBB15:
   3:virtual-sub.cpp ****     int baseData;
 267              		.loc 1 3 0
 268 0000 48C70700 		movq	$_ZTV10bottomBase+16, (%rdi)
 268      000000
 269 0007 C3       		ret
GAS LISTING /tmp/ccs0gzEm.s 			page 9


 270              	.LBE15:
 271              		.cfi_endproc
 272              	.LFE30:
 274              		.weak	_ZN10bottomBaseC1Ev
 275              		.set	_ZN10bottomBaseC1Ev,_ZN10bottomBaseC2Ev
 276              		.section	.text._ZN5baseAC2Ev,"axG",@progbits,_ZN5baseAC2Ev,comdat
 277              		.align 2
 278              		.weak	_ZN5baseAC2Ev
 280              	_ZN5baseAC2Ev:
 281              	.LFB33:
   9:virtual-sub.cpp ****     int dataA;
 282              		.loc 1 9 0
 283              		.cfi_startproc
 284              	.LVL31:
 285              	.LBB16:
   9:virtual-sub.cpp ****     int dataA;
 286              		.loc 1 9 0
 287 0000 488B06   		movq	(%rsi), %rax
 288 0003 488907   		movq	%rax, (%rdi)
 289 0006 488B5608 		movq	8(%rsi), %rdx
 290 000a 488B40E8 		movq	-24(%rax), %rax
 291 000e 48891407 		movq	%rdx, (%rdi,%rax)
 292 0012 C3       		ret
 293              	.LBE16:
 294              		.cfi_endproc
 295              	.LFE33:
 297              		.section	.text._ZN5baseBC2Ev,"axG",@progbits,_ZN5baseBC2Ev,comdat
 298              		.align 2
 299              		.weak	_ZN5baseBC2Ev
 301              	_ZN5baseBC2Ev:
 302              	.LFB36:
  16:virtual-sub.cpp ****     int dataB;
 303              		.loc 1 16 0
 304              		.cfi_startproc
 305              	.LVL32:
 306              	.LBB17:
  16:virtual-sub.cpp ****     int dataB;
 307              		.loc 1 16 0
 308 0000 488B06   		movq	(%rsi), %rax
 309 0003 488907   		movq	%rax, (%rdi)
 310 0006 488B5608 		movq	8(%rsi), %rdx
 311 000a 488B40E8 		movq	-24(%rax), %rax
 312 000e 48891407 		movq	%rdx, (%rdi,%rax)
 313 0012 C3       		ret
 314              	.LBE17:
 315              		.cfi_endproc
 316              	.LFE36:
 318              		.section	.text._ZN7subBothC1Ev,"axG",@progbits,_ZN7subBothC1Ev,comdat
 319              		.align 2
 320              		.weak	_ZN7subBothC1Ev
 322              	_ZN7subBothC1Ev:
 323              	.LFB39:
  23:virtual-sub.cpp ****   public:
 324              		.loc 1 23 0
 325              		.cfi_startproc
 326              	.LVL33:
 327 0000 53       		pushq	%rbx
GAS LISTING /tmp/ccs0gzEm.s 			page 10


 328              		.cfi_def_cfa_offset 16
 329              		.cfi_offset 3, -16
 330 0001 4889FB   		movq	%rdi, %rbx
 331              	.LBB18:
  23:virtual-sub.cpp ****   public:
 332              		.loc 1 23 0
 333 0004 488D7F20 		leaq	32(%rdi), %rdi
 334              	.LVL34:
 335 0008 E8000000 		call	_ZN10bottomBaseC2Ev
 335      00
 336              	.LVL35:
 337 000d BE000000 		movl	$_ZTT7subBoth+8, %esi
 337      00
 338 0012 4889DF   		movq	%rbx, %rdi
 339 0015 E8000000 		call	_ZN5baseAC2Ev
 339      00
 340              	.LVL36:
 341 001a 488D7B10 		leaq	16(%rbx), %rdi
 342 001e BE000000 		movl	$_ZTT7subBoth+24, %esi
 342      00
 343 0023 E8000000 		call	_ZN5baseBC2Ev
 343      00
 344              	.LVL37:
 345 0028 48C70300 		movq	$_ZTV7subBoth+24, (%rbx)
 345      000000
 346 002f 48C74320 		movq	$_ZTV7subBoth+112, 32(%rbx)
 346      00000000 
 347 0037 48C74310 		movq	$_ZTV7subBoth+80, 16(%rbx)
 347      00000000 
 348              	.LBE18:
 349 003f 5B       		popq	%rbx
 350              		.cfi_def_cfa_offset 8
 351              	.LVL38:
 352 0040 C3       		ret
 353              		.cfi_endproc
 354              	.LFE39:
 356              		.text
 357              		.globl	main
 359              	main:
 360              	.LFB27:
  69:virtual-sub.cpp **** 
  70:virtual-sub.cpp **** 
  71:virtual-sub.cpp **** int main(int argc, char **argv) {
 361              		.loc 1 71 0
 362              		.cfi_startproc
 363              	.LVL39:
 364 00b0 53       		pushq	%rbx
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 3, -16
 367              	.LBB19:
  72:virtual-sub.cpp **** 
  73:virtual-sub.cpp ****     subBoth *sb = new subBoth;
 368              		.loc 1 73 0
 369 00b1 BF300000 		movl	$48, %edi
 369      00
 370              	.LVL40:
 371 00b6 E8000000 		call	_Znwm
GAS LISTING /tmp/ccs0gzEm.s 			page 11


 371      00
 372              	.LVL41:
 373 00bb 4889C3   		movq	%rax, %rbx
 374 00be 4889C7   		movq	%rax, %rdi
 375 00c1 E8000000 		call	_ZN7subBothC1Ev
 375      00
 376              	.LVL42:
  74:virtual-sub.cpp **** 
  75:virtual-sub.cpp ****     int i = sb->getSum();
 377              		.loc 1 75 0
 378 00c6 488B03   		movq	(%rbx), %rax
 379 00c9 4889DF   		movq	%rbx, %rdi
 380 00cc FF5008   		call	*8(%rax)
 381              	.LVL43:
  76:virtual-sub.cpp **** 
  77:virtual-sub.cpp ****     baseA *ba = sb;
  78:virtual-sub.cpp **** 
  79:virtual-sub.cpp ****     ba->setDataA(12);
 382              		.loc 1 79 0
 383 00cf BE0C0000 		movl	$12, %esi
 383      00
 384 00d4 4889DF   		movq	%rbx, %rdi
 385 00d7 E8000000 		call	_ZN5baseA8setDataAEi
 385      00
 386              	.LVL44:
  80:virtual-sub.cpp ****     ba->getDataA();
 387              		.loc 1 80 0
 388 00dc 488B03   		movq	(%rbx), %rax
 389 00df 4889DF   		movq	%rbx, %rdi
 390 00e2 FF10     		call	*(%rax)
 391              	.LVL45:
  81:virtual-sub.cpp **** 
  82:virtual-sub.cpp ****     baseB *bb = sb;
 392              		.loc 1 82 0
 393 00e4 488D5310 		leaq	16(%rbx), %rdx
 394 00e8 4885DB   		testq	%rbx, %rbx
 395 00eb B8000000 		movl	$0, %eax
 395      00
 396 00f0 480F45C2 		cmovne	%rdx, %rax
 397 00f4 4889C3   		movq	%rax, %rbx
 398              	.LVL46:
  83:virtual-sub.cpp **** 
  84:virtual-sub.cpp ****     bb->setDataB(13);
 399              		.loc 1 84 0
 400 00f7 BE0D0000 		movl	$13, %esi
 400      00
 401 00fc 4889C7   		movq	%rax, %rdi
 402 00ff E8000000 		call	_ZN5baseB8setDataBEi
 402      00
 403              	.LVL47:
  85:virtual-sub.cpp ****     bb->getDataB();
 404              		.loc 1 85 0
 405 0104 488B03   		movq	(%rbx), %rax
 406 0107 4889DF   		movq	%rbx, %rdi
 407 010a FF10     		call	*(%rax)
 408              	.LVL48:
 409              	.LBE19:
GAS LISTING /tmp/ccs0gzEm.s 			page 12


  86:virtual-sub.cpp **** 
  87:virtual-sub.cpp ****     return 0;
  88:virtual-sub.cpp **** 
  89:virtual-sub.cpp **** }
 410              		.loc 1 89 0
 411 010c B8000000 		movl	$0, %eax
 411      00
 412 0111 5B       		popq	%rbx
 413              		.cfi_def_cfa_offset 8
 414              	.LVL49:
 415 0112 C3       		ret
 416              		.cfi_endproc
 417              	.LFE27:
 419              		.weak	_ZTS5baseA
 420              		.section	.rodata._ZTS5baseA,"aG",@progbits,_ZTS5baseA,comdat
 423              	_ZTS5baseA:
 424 0000 35626173 		.string	"5baseA"
 424      654100
 425              		.weak	_ZTI5baseA
 426              		.section	.rodata._ZTI5baseA,"aG",@progbits,_ZTI5baseA,comdat
 427              		.align 32
 430              	_ZTI5baseA:
 431 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 431      00000000 
 432 0008 00000000 		.quad	_ZTS5baseA
 432      00000000 
 433 0010 00000000 		.long	0
 434 0014 01000000 		.long	1
 435 0018 00000000 		.quad	_ZTI10bottomBase
 435      00000000 
 436 0020 03E8FFFF 		.quad	-6141
 436      FFFFFFFF 
 437              		.weak	_ZTS5baseB
 438              		.section	.rodata._ZTS5baseB,"aG",@progbits,_ZTS5baseB,comdat
 441              	_ZTS5baseB:
 442 0000 35626173 		.string	"5baseB"
 442      654200
 443              		.weak	_ZTI5baseB
 444              		.section	.rodata._ZTI5baseB,"aG",@progbits,_ZTI5baseB,comdat
 445              		.align 32
 448              	_ZTI5baseB:
 449 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 449      00000000 
 450 0008 00000000 		.quad	_ZTS5baseB
 450      00000000 
 451 0010 00000000 		.long	0
 452 0014 01000000 		.long	1
 453 0018 00000000 		.quad	_ZTI10bottomBase
 453      00000000 
 454 0020 03E8FFFF 		.quad	-6141
 454      FFFFFFFF 
 455              		.weak	_ZTS7subBoth
 456              		.section	.rodata._ZTS7subBoth,"aG",@progbits,_ZTS7subBoth,comdat
 459              	_ZTS7subBoth:
 460 0000 37737562 		.string	"7subBoth"
 460      426F7468 
 460      00
GAS LISTING /tmp/ccs0gzEm.s 			page 13


 461              		.weak	_ZTI7subBoth
 462              		.section	.rodata._ZTI7subBoth,"aG",@progbits,_ZTI7subBoth,comdat
 463              		.align 32
 466              	_ZTI7subBoth:
 467 0000 00000000 		.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
 467      00000000 
 468 0008 00000000 		.quad	_ZTS7subBoth
 468      00000000 
 469 0010 02000000 		.long	2
 470 0014 02000000 		.long	2
 471 0018 00000000 		.quad	_ZTI5baseA
 471      00000000 
 472 0020 02000000 		.quad	2
 472      00000000 
 473 0028 00000000 		.quad	_ZTI5baseB
 473      00000000 
 474 0030 02100000 		.quad	4098
 474      00000000 
 475              		.weak	_ZTT5baseA
 476              		.section	.rodata._ZTT5baseA,"aG",@progbits,_ZTV5baseA,comdat
 477              		.align 16
 480              	_ZTT5baseA:
 481 0000 00000000 		.quad	_ZTV5baseA+24
 481      00000000 
 482 0008 00000000 		.quad	_ZTV5baseA+56
 482      00000000 
 483              		.weak	_ZTV5baseA
 484              		.section	.rodata._ZTV5baseA,"aG",@progbits,_ZTV5baseA,comdat
 485              		.align 32
 488              	_ZTV5baseA:
 489 0000 10000000 		.quad	16
 489      00000000 
 490 0008 00000000 		.quad	0
 490      00000000 
 491 0010 00000000 		.quad	_ZTI5baseA
 491      00000000 
 492 0018 00000000 		.quad	_ZNK5baseA8getDataAEv
 492      00000000 
 493 0020 00000000 		.quad	0
 493      00000000 
 494 0028 F0FFFFFF 		.quad	-16
 494      FFFFFFFF 
 495 0030 00000000 		.quad	_ZTI5baseA
 495      00000000 
 496 0038 00000000 		.quad	_ZNK10bottomBase11getBaseDataEv
 496      00000000 
 497              		.weak	_ZTT5baseB
 498              		.section	.rodata._ZTT5baseB,"aG",@progbits,_ZTV5baseB,comdat
 499              		.align 16
 502              	_ZTT5baseB:
 503 0000 00000000 		.quad	_ZTV5baseB+24
 503      00000000 
 504 0008 00000000 		.quad	_ZTV5baseB+56
 504      00000000 
 505              		.weak	_ZTV5baseB
 506              		.section	.rodata._ZTV5baseB,"aG",@progbits,_ZTV5baseB,comdat
 507              		.align 32
GAS LISTING /tmp/ccs0gzEm.s 			page 14


 510              	_ZTV5baseB:
 511 0000 10000000 		.quad	16
 511      00000000 
 512 0008 00000000 		.quad	0
 512      00000000 
 513 0010 00000000 		.quad	_ZTI5baseB
 513      00000000 
 514 0018 00000000 		.quad	_ZNK5baseB8getDataBEv
 514      00000000 
 515 0020 00000000 		.quad	0
 515      00000000 
 516 0028 F0FFFFFF 		.quad	-16
 516      FFFFFFFF 
 517 0030 00000000 		.quad	_ZTI5baseB
 517      00000000 
 518 0038 00000000 		.quad	_ZNK10bottomBase11getBaseDataEv
 518      00000000 
 519              		.hidden	_ZTC7subBoth16_5baseB
 520              		.weak	_ZTC7subBoth16_5baseB
 521              		.section	.rodata._ZTC7subBoth16_5baseB,"aG",@progbits,_ZTV7subBoth,comdat
 522              		.align 32
 525              	_ZTC7subBoth16_5baseB:
 526 0000 10000000 		.quad	16
 526      00000000 
 527 0008 00000000 		.quad	0
 527      00000000 
 528 0010 00000000 		.quad	_ZTI5baseB
 528      00000000 
 529 0018 00000000 		.quad	_ZNK5baseB8getDataBEv
 529      00000000 
 530 0020 00000000 		.quad	0
 530      00000000 
 531 0028 F0FFFFFF 		.quad	-16
 531      FFFFFFFF 
 532 0030 00000000 		.quad	_ZTI5baseB
 532      00000000 
 533 0038 00000000 		.quad	_ZNK10bottomBase11getBaseDataEv
 533      00000000 
 534              		.hidden	_ZTC7subBoth0_5baseA
 535              		.weak	_ZTC7subBoth0_5baseA
 536              		.section	.rodata._ZTC7subBoth0_5baseA,"aG",@progbits,_ZTV7subBoth,comdat
 537              		.align 32
 540              	_ZTC7subBoth0_5baseA:
 541 0000 20000000 		.quad	32
 541      00000000 
 542 0008 00000000 		.quad	0
 542      00000000 
 543 0010 00000000 		.quad	_ZTI5baseA
 543      00000000 
 544 0018 00000000 		.quad	_ZNK5baseA8getDataAEv
 544      00000000 
 545 0020 00000000 		.quad	0
 545      00000000 
 546 0028 E0FFFFFF 		.quad	-32
 546      FFFFFFFF 
 547 0030 00000000 		.quad	_ZTI5baseA
 547      00000000 
GAS LISTING /tmp/ccs0gzEm.s 			page 15


 548 0038 00000000 		.quad	_ZNK10bottomBase11getBaseDataEv
 548      00000000 
 549              		.weak	_ZTT7subBoth
 550              		.section	.rodata._ZTT7subBoth,"aG",@progbits,_ZTV7subBoth,comdat
 551              		.align 32
 554              	_ZTT7subBoth:
 555 0000 00000000 		.quad	_ZTV7subBoth+24
 555      00000000 
 556 0008 00000000 		.quad	_ZTC7subBoth0_5baseA+24
 556      00000000 
 557 0010 00000000 		.quad	_ZTC7subBoth0_5baseA+56
 557      00000000 
 558 0018 00000000 		.quad	_ZTC7subBoth16_5baseB+24
 558      00000000 
 559 0020 00000000 		.quad	_ZTC7subBoth16_5baseB+56
 559      00000000 
 560 0028 00000000 		.quad	_ZTV7subBoth+112
 560      00000000 
 561 0030 00000000 		.quad	_ZTV7subBoth+80
 561      00000000 
 562              		.weak	_ZTV7subBoth
 563              		.section	.rodata._ZTV7subBoth,"aG",@progbits,_ZTV7subBoth,comdat
 564              		.align 32
 567              	_ZTV7subBoth:
 568 0000 20000000 		.quad	32
 568      00000000 
 569 0008 00000000 		.quad	0
 569      00000000 
 570 0010 00000000 		.quad	_ZTI7subBoth
 570      00000000 
 571 0018 00000000 		.quad	_ZNK7subBoth8getDataAEv
 571      00000000 
 572 0020 00000000 		.quad	_ZNK7subBoth6getSumEv
 572      00000000 
 573 0028 00000000 		.quad	_ZNK7subBoth8getDataBEv
 573      00000000 
 574 0030 00000000 		.quad	_ZNK7subBoth11getBaseDataEv
 574      00000000 
 575 0038 10000000 		.quad	16
 575      00000000 
 576 0040 F0FFFFFF 		.quad	-16
 576      FFFFFFFF 
 577 0048 00000000 		.quad	_ZTI7subBoth
 577      00000000 
 578 0050 00000000 		.quad	_ZThn16_NK7subBoth8getDataBEv
 578      00000000 
 579 0058 E0FFFFFF 		.quad	-32
 579      FFFFFFFF 
 580 0060 E0FFFFFF 		.quad	-32
 580      FFFFFFFF 
 581 0068 00000000 		.quad	_ZTI7subBoth
 581      00000000 
 582 0070 00000000 		.quad	_ZTv0_n24_NK7subBoth11getBaseDataEv
 582      00000000 
 583              		.text
 584              	.Letext0:
GAS LISTING /tmp/ccs0gzEm.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 virtual-sub.cpp
     /tmp/ccs0gzEm.s:7      .text:0000000000000000 _ZNK5baseA8getDataAEv
     /tmp/ccs0gzEm.s:23     .text:0000000000000004 _ZNK5baseB8getDataBEv
     /tmp/ccs0gzEm.s:38     .text:0000000000000008 _ZNK7subBoth6getSumEv
     /tmp/ccs0gzEm.s:88     .text:000000000000002a _ZNK7subBoth8getDataAEv
     /tmp/ccs0gzEm.s:129    .text:000000000000004c _ZNK7subBoth8getDataBEv
     /tmp/ccs0gzEm.s:165    .text:000000000000006f _ZThn16_NK7subBoth8getDataBEv
     /tmp/ccs0gzEm.s:181    .text:0000000000000076 _ZNK7subBoth11getBaseDataEv
     /tmp/ccs0gzEm.s:219    .text:000000000000009f _ZTv0_n24_NK7subBoth11getBaseDataEv
     /tmp/ccs0gzEm.s:232    .text:00000000000000a8 _ZN5baseA8setDataAEi
     /tmp/ccs0gzEm.s:246    .text:00000000000000ac _ZN5baseB8setDataBEi
     /tmp/ccs0gzEm.s:261    .text._ZN10bottomBaseC2Ev:0000000000000000 _ZN10bottomBaseC2Ev
     /tmp/ccs0gzEm.s:261    .text._ZN10bottomBaseC2Ev:0000000000000000 _ZN10bottomBaseC1Ev
     /tmp/ccs0gzEm.s:280    .text._ZN5baseAC2Ev:0000000000000000 _ZN5baseAC2Ev
     /tmp/ccs0gzEm.s:301    .text._ZN5baseBC2Ev:0000000000000000 _ZN5baseBC2Ev
     /tmp/ccs0gzEm.s:322    .text._ZN7subBothC1Ev:0000000000000000 _ZN7subBothC1Ev
     /tmp/ccs0gzEm.s:554    .rodata._ZTT7subBoth:0000000000000000 _ZTT7subBoth
     /tmp/ccs0gzEm.s:567    .rodata._ZTV7subBoth:0000000000000000 _ZTV7subBoth
     /tmp/ccs0gzEm.s:359    .text:00000000000000b0 main
     /tmp/ccs0gzEm.s:423    .rodata._ZTS5baseA:0000000000000000 _ZTS5baseA
     /tmp/ccs0gzEm.s:430    .rodata._ZTI5baseA:0000000000000000 _ZTI5baseA
     /tmp/ccs0gzEm.s:441    .rodata._ZTS5baseB:0000000000000000 _ZTS5baseB
     /tmp/ccs0gzEm.s:448    .rodata._ZTI5baseB:0000000000000000 _ZTI5baseB
     /tmp/ccs0gzEm.s:459    .rodata._ZTS7subBoth:0000000000000000 _ZTS7subBoth
     /tmp/ccs0gzEm.s:466    .rodata._ZTI7subBoth:0000000000000000 _ZTI7subBoth
     /tmp/ccs0gzEm.s:480    .rodata._ZTT5baseA:0000000000000000 _ZTT5baseA
     /tmp/ccs0gzEm.s:488    .rodata._ZTV5baseA:0000000000000000 _ZTV5baseA
     /tmp/ccs0gzEm.s:502    .rodata._ZTT5baseB:0000000000000000 _ZTT5baseB
     /tmp/ccs0gzEm.s:510    .rodata._ZTV5baseB:0000000000000000 _ZTV5baseB
     /tmp/ccs0gzEm.s:525    .rodata._ZTC7subBoth16_5baseB:0000000000000000 _ZTC7subBoth16_5baseB
     /tmp/ccs0gzEm.s:540    .rodata._ZTC7subBoth0_5baseA:0000000000000000 _ZTC7subBoth0_5baseA
                           .group:0000000000000000 _ZN10bottomBaseC5Ev

UNDEFINED SYMBOLS
__printf_chk
_ZNK10bottomBase11getBaseDataEv
_ZTV10bottomBase
_Znwm
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTI10bottomBase
