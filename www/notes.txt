Notes as I'm going along.

What is __stack_chk_guard?

-fno-inline -fno-stackprotect


Notes from first class 2015:
* Syscall vs. method call
* Didn't guess that malloc was a symbol
* Question about allocating extra space for a struct or union wasn't clear to people.
*
* People wanted a picture for vtable and virtual dispatch
* What's the 0 in the first slot of the table for?
* Slicing off an object by calling a method that takes a superclass by value was confusing because it isn't really a bug.
* Explain better
* Have some kind of reference thing for what registers are what. Hard for people to follow.
* Honestly, looking at assembly listings is hard. If I was doing a good job I would annotate them more.

TODO:
Better source code for __dynamic_cast.
x Download links in the code areas, or links that open in new tab.

Things not yet appearing anywhere:
Rvalue references which are modifiable.
Function forwarding?
x Array initialization
Lambda and captures.  Non constant stack captures. Capturing this if not trivial. Invoking after scope dead.
x Initializer list constructors
Foo(NULL) calls the int version
Variadac functions and templates?
x User defined literals?
Thread local
Alignof and alignas
Polymorphic function pointers - these are all statically typed right?


Stuff that compiles away
x Constexpr
x Plain old data and standard layout
Extern template
x Type inference, auto and decltype
x Range based for loop
Default values of function parameters except not.
Final and override
Enum classes


TODO: Build the basic examples without exceptions for simpilicity.
